datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String     @id @default(cuid())
    name          String?
    businessName  String?
    email         String?    @unique
    emailVerified DateTime?
    image         String?
    role          String     @default("USER")
    accounts      Account[]
    sessions      Session[]
    pista         Pista[]
    reserva       Reserva[]
    registro      Registro[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model Pista {
    id                String   @id @default(cuid())
    nombre            String
    descripcion       String
    imagen            String
    ubicacionLatitud  String
    ubicacionLongitud String
    telefono          String
    usuario           User     @relation(fields: [usuarioId], references: [id])
    usuarioId         String
    evento            Evento[]
}

model Reserva {
    id                String   @id @default(cuid())
    fecha             DateTime
    fechaModificacion DateTime
    activa            Boolean
    usuario           User     @relation(fields: [usuarioId], references: [id])
    usuarioId         String
    evento            Evento   @relation(fields: [eventoId], references: [id])
    eventoId          String
}

model Evento {
    id          String    @id @default(cuid())
    nombre      String
    descripcion String
    precio      Decimal
    fechaInicio String
    fechaFin    String
    ocupada     Boolean
    pista       Pista?    @relation(fields: [pistaId], references: [id])
    pistaId     String?
    Reserva     Reserva[]
}

// CADA VEZ QUE EL USUARIO HAGA UNA ACCION SE REGISTRARA EN ESTA TABLA
model Registro {
    id          String   @id @default(cuid())
    fecha       DateTime
    accion      String // EJEMPLO: Se ha creado una pista
    descripcion String // EJEMPLO: Se ha creado la pista con el nombre de "Pista 1"
    usuario     User     @relation(fields: [usuarioId], references: [id])
    usuarioId   String
}
